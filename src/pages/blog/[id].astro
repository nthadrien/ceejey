---
import type { GetStaticPaths } from "astro";
import { getCollection,getEntries, render } from "astro:content";
// components imports
import Layout from "../../layouts/ELayout.astro";
import BlogCard from "../../components/cards/BlogCard.astro";
import NewsLetter from "@components/forms/NewsLetter.astro";
import BreadCrumb from "@components/headers/BreadCrumb.astro";
import TableOfContent from "@components/headers/TableOfContent.astro";

export const getStaticPaths = (async () => {
    const post = await getCollection("blog");
    return post.map( post => {
        return {
            params: { id: post.id },
            props: {post}
        }
    });
}) satisfies GetStaticPaths;

const { post } = Astro.props;
const { Content, remarkPluginFrontmatter, headings  } = await render(post);

const relatedPosts = await getEntries(post.data.relatedPosts);


const headerInfo = {
	description : post.data.description,
	title: post.data.title,
	keywords: post.data.tags,
};

---

<Layout {...headerInfo}>

    <BreadCrumb page="" />

    <main class="container-sm mx-auto my-3 position-relative">

        <section class="row">

            <aside class="col-lg-8">
                <h2>{post.data.title}</h2>
                <p>{post.data.description}</p>
                <p> 
                    {remarkPluginFrontmatter.minutesRead} 
                    <span class="vr mx-3" />  
                    {post.data.publishDate.toDateString().slice(4)}
                </p>

                <img class="mb-4 w-100 ratio ratio-16x9 rounded-3" src={post.data.image.src} alt={post.data.image.alt} alt="blog pic" />

            </aside>

            <aside class="col-lg-4">
                <h4 class="text-swanky fw-bold my-3">Blog Tags:</h4>
                <small class="nav gap-2"> 
                    {post.data.tags.map( tag => <a href={`/blog/?page=1&tag=${tag}`} class="border border-primary-subtle text-monospace text-capitalize p-1">{tag}</a>)}
                </small>
                <TableOfContent headings={headings} />
            </aside>
            
        </section>

        <article class="col-lg-8 ms-0">
            <Content />
        </article>

    </main>


    <section class="container-sm mx-auto">

        <button onclick="javascript:window.history.back()" class="btn btn-sm text-primary">
            <i class="bi bi-arrow-left"></i> Return
        </button>

        <h1 class="my-4">Similar Posts:</h1>

        <div class="row row-cols-2 g-3">
            { relatedPosts[0] && relatedPosts.map( post => <div style="max-width: 26rem;" class="col">
                <BlogCard post={post} />
            </div> )}
            { !relatedPosts[0] ?  <h3 class="text-swanky">Sorry no related post available.</h3> : <></> }
        </div>
  
    </section>

    <NewsLetter />

</Layout>

<style is:global>
    h1 {
        font-size: 1.5rem;
    }
    h2 {
        font-size: 1.3rem;
    }
    h3 {
        font-size: 1.2rem;
    }

    h4 {
        font-size: 1.1rem;
    }

    h1,h2,h3,h4 {
        margin: 0.9rem 0;
    }

    img {
        object-fit: cover;
        margin: auto;
    }

    .content {
        white-space: 12px;

        & img {
            border-radius: 0.4rem;
            object-fit: contain;
        }
    }
</style>